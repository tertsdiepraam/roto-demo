fn add(_time: f32) {
    let i =  0;
    while i < 10 {
        let x = f32.rand(0.9, 1.0);
        let y = -10.0;
        let z = f32.rand(0.9, 1.0);
        let color = Color.new(
            f32.rand(0.0, 0.5),
            f32.rand(0.0, 0.5),
            f32.rand(0.5, 0.8),
        );
        emit(Particle.new(
            Vec3.new(x, y, z),
            1.0,
            color,
        ));

        i = i + 1;
    }
}

fn rotate(v: Vec3, angle: f32) -> Vec3 {
    let x = v.x();
    let z = v.z();
    let x2 = x * angle.cos() - z * angle.sin();
    let z2 = x * angle.sin() + z * angle.cos();
    Vec3.new(x2, v.y(), z2)
}

fn update(time: f32, p: Particle) -> Particle? {
    let lifetime = 20.0;
    let speed: f32 = -0.1;
    if time > lifetime {
        return None;
    }

    let t = time / lifetime;

    let pos = p.pos();
    let rot_pos = rotate(
        pos,
        speed / Vec3.new(pos.x(), 0.0, pos.z()).length(),
    );
    let scale_factor = 1.002;
    let new_pos = Vec3.new(
        scale_factor * rot_pos.x(),
        0.02 + rot_pos.y(),
        scale_factor * rot_pos.z(),
    );

    let scale = t.pow(0.5);
    let color = p.color();
    Some(Particle.new(new_pos, scale, color))
}
